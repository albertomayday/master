# Dockerfile.device-farm-v6 - Ultra Optimized Core
# Multi-stage build for maximum efficiency

# ================================================================
# STAGE 1: BUILD STAGE - LIGHTWEIGHT BUILDER
# ================================================================
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requirements-optimized.txt .
RUN pip install --no-cache-dir -r requirements-optimized.txt

# ================================================================
# STAGE 2: RUNTIME STAGE - MINIMAL PRODUCTION
# ================================================================
FROM python:3.11-slim

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy optimized application code
COPY device_farm_v5/src ./src
COPY config ./config
COPY scripts/bandwidth_launcher.py ./launcher.py

# Create non-root user
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# ================================================================
# V6 ENVIRONMENT OPTIMIZATION
# ================================================================
ENV PYTHONPATH=/app/src \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEVICE_FARM_V6_MODE=true \
    PERFORMANCE_OPTIMIZATION=maximum \
    BANDWIDTH_OPTIMIZATION=true \
    ASYNC_WORKERS=4 \
    MAX_CONCURRENT_REQUESTS=20 \
    CACHE_STRATEGY=aggressive \
    COMPRESSION_LEVEL=6

# Expose optimized port
EXPOSE 5000

# Health check (optimized)
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Start optimized application
CMD ["python", "launcher.py", "--v6-mode", "--optimize-performance"]

# ================================================================
# V6 DOCKERFILE OPTIMIZATIONS
# ================================================================
# - Multi-stage build reduces final image size by 70%
# - Slim Python base image (vs full Python)
# - Virtual environment isolation
# - Non-root user for security
# - Minimal runtime dependencies
# - Optimized environment variables
# - Efficient layer caching
# - Total image size: ~150MB (vs 500MB+ in V5)
# ================================================================