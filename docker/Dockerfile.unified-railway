# Descarga manual/dataset COCO:
# - Oficial: https://cocodataset.org/#download
# - Ultralytics: https://docs.ultralytics.com/datasets/detect/coco/
# Puedes descargarlo manualmente o lanzar el script /app/scripts/download_coco_dataset.py cuando lo necesites.
# Descargar COCO autom치ticamente en build (puede fallar en cloud por tama침o/tiempo)
RUN python /app/scripts/download_coco_dataset.py
# Dockerfile.unified-railway
# Imagen unificada: ML API + Dashboard Streamlit + dependencias completas


FROM python:3.11-slim

WORKDIR /app

# Dependencias del sistema
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libglib2.0-0 libsm6 libxext6 libxrender-dev \
    libgomp1 libgl1-mesa-dev libglu1-mesa-dev \
    libglfw3-dev libglew-dev \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Copiar requirements
COPY requirements.txt requirements-ml.txt ./

# Instalar dependencias Python
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt -r requirements-ml.txt streamlit fastapi uvicorn supervisor

# Copiar c칩digo fuente
COPY ml_core /app/ml_core
COPY device_farm /app/device_farm
COPY scripts /app/scripts
COPY config /app/config
COPY database /app/database
COPY .env* /app/

# Copiar configuraci칩n de supervisord
COPY docker/supervisord.conf /etc/supervisord.conf

# Crear directorios necesarios
RUN mkdir -p /app/data/models/production /app/data/models/checkpoints /app/data/datasets/coco /app/logs /app/temp

# Variables de entorno
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DUMMY_MODE=false
ENV ENVIRONMENT=production
ENV STREAMLIT_SERVER_HEADLESS=true
ENV STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Exponer puertos
EXPOSE 8000 8501

# Healthcheck (opcional)
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || curl -f http://localhost:8501/_stcore/health || exit 1

# Lanzar supervisord para ambos servicios
CMD ["supervisord", "-c", "/etc/supervisord.conf"]
