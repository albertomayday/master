# ðŸš€ Dockerfile Multi-stage para Railway - Ultra Optimizado
FROM python:3.11-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev linux-headers

# Copy requirements
COPY requirements-streamlit.txt .

# Install dependencies in virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --upgrade pip && \
    pip install -r requirements-streamlit.txt

# Production stage
FROM python:3.11-alpine AS production

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Copy only necessary files
COPY scripts/viral_study_analysis.py scripts/
COPY data/ data/

# Create required directories
RUN mkdir -p logs cache uploads

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV STREAMLIT_SERVER_HEADLESS=true
ENV STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Expose port
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=2 \
    CMD curl -f http://localhost:$PORT/_stcore/health || exit 1

# Start command
CMD streamlit run scripts/viral_study_analysis.py \
    --server.port $PORT \
    --server.address 0.0.0.0 \
    --server.headless true