name: 🚀 Build & Deploy Stakas MVP to Railway

on:
  push:
    branches: [ main, completo ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_to_railway:
        description: 'Deploy to Railway'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: stakasmvp/viral-system
  CHANNEL_ID: UCgohgqLVu1QPdfa64Vkrgeg

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: 🛎️ Checkout repository
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏷️ Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🏗️ Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          CHANNEL_ID=${{ env.CHANNEL_ID }}
          META_ADS_BUDGET=500
          ENVIRONMENT=production
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🔍 Test Docker image
      run: |
        docker run --rm -d --name stakas-test \
          -p 8080:8080 \
          -e DUMMY_MODE=true \
          -e CHANNEL_ID=${{ env.CHANNEL_ID }} \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        sleep 30
        
        # Health check
        curl -f http://localhost:8080/health || exit 1
        
        # Stop test container
        docker stop stakas-test

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 🛡️ Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📊 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy-railway:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' || github.event.inputs.deploy_to_railway == 'true'
    environment: production
    
    steps:
    - name: 🛎️ Checkout repository
      uses: actions/checkout@v4

    - name: 🚂 Deploy to Railway
      uses: railwayapp/railway-deploy@v1.1.3
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: stakas-mvp-app
        environment: production

    - name: 📊 Create deployment summary
      run: |
        echo "## 🎵 Stakas MVP Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 🏗️ Docker Build | ✅ Success |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔒 Security Scan | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        echo "| 🚂 Railway Deploy | ✅ Success |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Project Info" >> $GITHUB_STEP_SUMMARY
        echo "- **Canal**: Stakas MVP (UCgohgqLVu1QPdfa64Vkrgeg)" >> $GITHUB_STEP_SUMMARY
        echo "- **Budget**: €500/month Meta Ads" >> $GITHUB_STEP_SUMMARY
        echo "- **Target**: Drill/Rap Español" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan, deploy-railway]
    if: always()
    
    steps:
    - name: 📢 Discord notification
      if: always()
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      with:
        args: |
          🎵 **Stakas MVP Deployment Status**
          
          📦 **Build**: ${{ needs.build-and-test.result == 'success' && '✅ Success' || '❌ Failed' }}
          🔒 **Security**: ${{ needs.security-scan.result == 'success' && '✅ Passed' || '❌ Failed' }}
          🚂 **Deploy**: ${{ needs.deploy-railway.result == 'success' && '✅ Success' || '❌ Failed' }}
          
          🎯 **Canal**: UCgohgqLVu1QPdfa64Vkrgeg
          💰 **Budget**: €500/month Meta Ads
          🌍 **Environment**: Production
          
          ${{ github.event.head_commit.message }}