name: 🚀 Multi-Branch Railway Deploy

on:
  push:
    branches: 
      - main
      - Meta
      - completo
      - device-farm-v5-integration
      - micro-services
      - 'production/*'
      - 'feature/*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - Meta
          - completo
          - device-farm-v5-integration
          - micro-services

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  deploy-branch:
    name: 🎯 Deploy ${{ github.ref_name }}
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 🚂 Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH
        
    - name: 🔐 Railway Login
      run: railway login --token ${{ secrets.RAILWAY_TOKEN }}
      
    - name: 📋 Determine Service Config
      id: config
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        case $BRANCH_NAME in
          "main")
            echo "service_name=stakas-mvp-main" >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile.main" >> $GITHUB_OUTPUT
            ;;
          "Meta")
            echo "service_name=stakas-mvp-meta" >> $GITHUB_OUTPUT  
            echo "dockerfile=Dockerfile.Meta" >> $GITHUB_OUTPUT
            ;;
          "completo")
            echo "service_name=stakas-mvp-completo" >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile.completo" >> $GITHUB_OUTPUT
            ;;
          "device-farm-v5-integration")
            echo "service_name=stakas-mvp-devicefarm" >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile.device-farm-v5-integration" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "service_name=stakas-mvp-${BRANCH_NAME//[^a-zA-Z0-9]/-}" >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile.generic" >> $GITHUB_OUTPUT
            ;;
        esac
        
    - name: 🎯 Create/Link Railway Service
      run: |
        railway link -p ${{ secrets.RAILWAY_PROJECT_ID }} || true
        railway service create ${{ steps.config.outputs.service_name }} || true
        
    - name: 🔧 Set Branch Environment Variables
      run: |
        railway variables set BRANCH="${{ github.ref_name }}"
        railway variables set CHANNEL_ID="UCgohgqLVu1QPdfa64Vkrgeg"
        railway variables set APP_ENV="production"
        railway variables set COMMIT_SHA="${{ github.sha }}"
        
    - name: 🚀 Deploy to Railway
      run: |
        if [ -f "${{ steps.config.outputs.dockerfile }}" ]; then
          railway up --dockerfile ${{ steps.config.outputs.dockerfile }} --detach
        else
          railway up --dockerfile Dockerfile.minimal --detach
        fi
        
    - name: 📋 Get Deployment Info
      run: |
        railway status
        railway domain || echo "No domain configured"
        
    - name: 💬 Success Notification
      if: success()
      run: |
        echo "🚀 Branch ${{ github.ref_name }} deployed successfully!"
        echo "📺 Canal: UCgohgqLVu1QPdfa64Vkrgeg"
        echo "🎯 Service: ${{ steps.config.outputs.service_name }}"
